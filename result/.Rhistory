theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "27 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "28 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "29 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "230 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "30 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "31 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "20 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "19 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "18 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "17 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "21 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "22 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "15 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "16 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "17 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "18 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "19 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "20 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "20.1 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "21 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "22 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "23 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Month") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc-1]),col='change point location \n Feb 2015'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n Feb 2015" = "red"))+
scale_x_date(date_breaks = "22 month", date_labels =  "%b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggsave("elec_scan_stat.pdf",width = 7, height = 5,units="in")
##### plot the preprocess data with each composition of each resource,
##### along with a red vertical line indicating the estiamted change point location
ggplot(df, aes(time,value)) +
geom_line(aes(colour = Resources,lty=Resources))+
xlab("Month") + ylab("Composition")+geom_vline(xintercept = as.numeric(df$time[171]), color = "black",lty="dashed")+
theme_bw()+
scale_x_date(date_breaks = "40 month", date_labels =  "%b %Y")+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))+
theme(axis.text.x=element_text(angle=45, hjust=1))
##### we combine the result and formulate into a long dataframe form
df_elec<-as.data.frame(elec_data)
names(df_elec)<-c("coal","petroleum","gas","nuclear",'conventional hydro',"renewable",'solar')
df_elec$time<-seq(as.Date("2001/1/1"), as.Date("2022/12/1"), "months")
df <- melt(df_elec ,  id.vars = 'time', variable.name = 'Resources')
##### plot the preprocess data with each composition of each resource,
##### along with a red vertical line indicating the estiamted change point location
ggplot(df, aes(time,value)) +
geom_line(aes(colour = Resources,lty=Resources))+
xlab("Month") + ylab("Composition")+geom_vline(xintercept = as.numeric(df$time[170]), color = "black",lty="dashed")+
theme_bw()+
scale_x_date(date_breaks = "40 month", date_labels =  "%b %Y")+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))+
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("elec_cpd.pdf",width = 7, height = 5,units="in")
ggplot(df, aes(time,value)) +
geom_line(aes(colour = Resources,lty=Resources))+
xlab("Month") + ylab("Composition")+geom_vline(xintercept = c(as.numeric(df$time[170]),as.numeric(df$time[77]),as.numeric(df$time[218])), color = "black",lty="dashed")+
theme_bw()+
scale_x_date(date_breaks = "40 month", date_labels =  "%b %Y")+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))+
theme(axis.text.x=element_text(angle=45, hjust=1))
ggsave("elec_multiple_cpd.pdf",width = 7, height = 5,units="in")
####### first load the dataset and compress it to daily data
####### since original dataset has time interval of 4-hour
####### then calculate the laplacian matrix
MIT<-get(load("reality_mining_1392.RData"))
G_list<-list()
for (i in 1:(dim(MIT)[3]/6)){
G_list[[i]]<-rowSums(MIT[,,(i*6-5):(i*6)],dims=2)
}
Data<-c()
for (i in 1:(dim(MIT)[3]/6)){
g<-as.matrix(laplacian_matrix(graph_from_adjacency_matrix(G_list[[i]])))
Data<-rbind(Data,c(2*g[upper.tri(g)],diag(g)))
}
require(gtools)
library(boot)
library(magrittr)
library(MASS)
#library(energy)
library(Hotelling)
library(gTests)
library(matrixStats)
library(ade4)
library(mvtnorm)
require(usedist)
require(reshape2)
library(ggplot2)
library(igraph)
####### first load the dataset and compress it to daily data
####### since original dataset has time interval of 4-hour
####### then calculate the laplacian matrix
MIT<-get(load("reality_mining_1392.RData"))
G_list<-list()
for (i in 1:(dim(MIT)[3]/6)){
G_list[[i]]<-rowSums(MIT[,,(i*6-5):(i*6)],dims=2)
}
Data<-c()
for (i in 1:(dim(MIT)[3]/6)){
g<-as.matrix(laplacian_matrix(graph_from_adjacency_matrix(G_list[[i]])))
Data<-rbind(Data,c(2*g[upper.tri(g)],diag(g)))
}
####### calculate the distance matrix
distmat<-as.matrix(dist(Data , method = 'manhattan' ))
####### run depth_CPD function, and get the estimated change point location
num_permut<-1
depth_result<-depth_CPD(distmat,num_permut =num_permut,c=0.1)
depth_result$loc
#calculate the scan statistics sequence and plot it
n=nrow(distmat);c<-0.1
test<-c()
for (cp in seq(ceiling(n*c),n-ceiling(n*c),1)){
testStat <- getT( distmat = distmat, indices = 1:n, n = cp, m = n-cp, cut_off = 0 )
test<-cbind(test,testStat)
}
scan_stat<-c(rep(0,ceiling(n*c)-1),test,rep(0,ceiling(n*c)))
date_seq<-seq(as.Date("2004/9/14"), as.Date("2004-09-14")+dim(distmat)[1]-1, "days")
df<-data.frame(scan_stat=scan_stat,day=date_seq)
depth_result$loc
as.Date("2004/9/14")+93
scan_stat<-c(rep(0,ceiling(n*c)-1),test,rep(0,ceiling(n*c)))
date_seq<-seq(as.Date("2004/9/14"), as.Date("2004-09-14")+dim(distmat)[1]-1, "days")
df<-data.frame(scan_stat=scan_stat,day=date_seq)
ggplot(df,aes(x=day,y=scan_stat))+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "25 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
scan_stat<-c(rep(0,ceiling(n*c)-1),test,rep(0,ceiling(n*c)))
date_seq<-seq(as.Date("2004/9/14"), as.Date("2004-09-14")+dim(distmat)[1]-1, "days")
df<-data.frame(scan_stat=scan_stat,day=date_seq)
ggplot(df,aes(x=day,y=scan_stat))+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "25 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
####### run depth_CPD function, and get the estimated change point location
num_permut<-1
depth_result<-depth_CPD(distmat,num_permut =num_permut,c=0.1)
depth_result$loc
#calculate the scan statistics sequence and plot it
n=nrow(distmat);c<-0.1
test<-c()
for (cp in seq(ceiling(n*c),n-ceiling(n*c),1)){
testStat <- getT( distmat = distmat, indices = 1:n, n = cp, m = n-cp, cut_off = 0 )
test<-cbind(test,testStat)
}
scan_stat<-c(rep(0,ceiling(n*c)-1),test,rep(0,ceiling(n*c)))
date_seq<-seq(as.Date("2004/9/14"), as.Date("2004-09-14")+dim(distmat)[1]-1, "days")
df<-data.frame(scan_stat=scan_stat,day=date_seq)
ggplot(df,aes(x=day,y=scan_stat))+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "25 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggsave("mit_scan_stat.pdf",width = 7, height = 5,units="in")
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-16'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-16" = "red"))+
scale_x_date(date_breaks = "25 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "25 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "23 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "22 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "21 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "20 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "19 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "25 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "26 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggplot(df,aes(x=day,y=scan_stat))+geom_line()+xlab("Day") + ylab("Scan statistics")+
geom_vline(aes(xintercept = as.numeric(date_seq[depth_result$loc])-1,col='change point location \n 2004-12-15'))+
scale_color_manual(name = "Dist-CP", values = c("change point location \n 2004-12-15" = "red"))+
scale_x_date(date_breaks = "22 days", date_labels =  "%d %b %Y")+
theme_bw()+theme(legend.position=c(0.85, 0.9))+
theme(axis.text.x=element_text(angle=45, hjust=1))+
theme(panel.grid.minor = element_line(linetype="dashed"))+theme(panel.grid.major = element_line(linetype="dashed"))
ggsave("mit_scan_stat.pdf",width = 7, height = 5,units="in")
source("../functions/binary_segmentation.R")
MIT_path<-"/Users/mzheng/Desktop/Research/Prof_Dubey/elec_result"
file_list = mixedsort(list.files(path = MIT_path ,full.names=TRUE,recursive=TRUE))
minLen<-10
#30 percent, c=0.3
seed_I<-seeded.intervals(264,decay = sqrt(2))
seed_I<-seed_I[(seed_I[,2]-seed_I[,1])>minLen,]
nrow(seed_I)
mit_loc<-c();mit_pval<-c();mit_ob<-c();mit_permute<-c()
#for (i in file_list[min_20]){
for (i in file_list){
d<-get(load(i))
dim(d$test)
mit_ob<-c(mit_ob,d$observed_test_statistics)
mit_permute<-rbind(mit_permute,d$permuted_test_statistics)
mit_pval<-c(mit_pval,d$p_val)
mit_loc<-c(mit_loc,d$loc)
}
mit_threshold<-quantile(mit_permute[1,],0.95)
#1. we could break the loop, as soon as there is a point doesn't satisfy the stopping rule, say pval
#2. collect all the maximal until exhaust, then delete the unstaisfied points.
mit_depth_max<-c();IND<-c(1:length(mit_ob));I<-c()
for (i in order(mit_ob,decreasing = TRUE)){
if (i %in% IND){
#if (mit_pval[i]>0.01){
if (mit_ob[i]<=mit_threshold){
break
}else{mit_depth_max<-c(mit_depth_max,mit_loc[i])}
}else{next}
val<-mit_loc[i]
ind<-which(seed_I[,1]>val|seed_I[,2]<val,)
IND<-intersect(IND, ind)
I<-c(I,i)
}
sort(mit_depth_max)
X<-read.csv("../real_data/elec_processed.csv")
geo_dist<-function(x,y){
acos(sum(sqrt(x)*sqrt(y)))
}
distmat<-as.matrix(dist_make(X,geo_dist))
minLen<-10
#30 percent, c=0.3
seed_I<-seeded.intervals(264,decay = sqrt(2))
seed_I<-seed_I[(seed_I[,2]-seed_I[,1])>minLen,]
nrow(seed_I)
mit_loc<-c();mit_pval<-c();mit_ob<-c();mit_permute<-c()
#for (i in file_list[min_20]){
for (i in file_list){
d<-get(load(i))
dim(d$test)
mit_ob<-c(mit_ob,d$observed_test_statistics)
mit_permute<-rbind(mit_permute,d$permuted_test_statistics)
mit_pval<-c(mit_pval,d$p_val)
mit_loc<-c(mit_loc,d$loc)
}
mit_threshold<-quantile(mit_permute[1,],0.95)
#1. we could break the loop, as soon as there is a point doesn't satisfy the stopping rule, say pval
#2. collect all the maximal until exhaust, then delete the unstaisfied points.
mit_depth_max<-c();IND<-c(1:length(mit_ob));I<-c()
for (i in order(mit_ob,decreasing = TRUE)){
if (i %in% IND){
#if (mit_pval[i]>0.01){
if (mit_ob[i]<=mit_threshold){
break
}else{mit_depth_max<-c(mit_depth_max,mit_loc[i])}
}else{next}
val<-mit_loc[i]
ind<-which(seed_I[,1]>val|seed_I[,2]<val,)
IND<-intersect(IND, ind)
I<-c(I,i)
}
sort(mit_depth_max)
file_list
source("../functions/binary_segmentation.R")
MIT_path<-"/Users/mzheng/Desktop/Research/Prof_Dubey/elec_result"
file_list = mixedsort(list.files(path = MIT_path ,full.names=TRUE,recursive=TRUE))
minLen<-10
#30 percent, c=0.3
seed_I<-seeded.intervals(264,decay = sqrt(2))
seed_I<-seed_I[(seed_I[,2]-seed_I[,1])>minLen,]
nrow(seed_I)
mit_loc<-c();mit_pval<-c();mit_ob<-c();mit_permute<-c()
#for (i in file_list[min_20]){
for (i in file_list){
d<-get(load(i))
dim(d$test)
mit_ob<-c(mit_ob,d$observed_test_statistics)
mit_permute<-rbind(mit_permute,d$permuted_test_statistics)
mit_pval<-c(mit_pval,d$p_val)
mit_loc<-c(mit_loc,d$loc)
}
mit_threshold<-quantile(mit_permute[1,],0.95)
#1. we could break the loop, as soon as there is a point doesn't satisfy the stopping rule, say pval
#2. collect all the maximal until exhaust, then delete the unstaisfied points.
mit_depth_max<-c();IND<-c(1:length(mit_ob));I<-c()
for (i in order(mit_ob,decreasing = TRUE)){
if (i %in% IND){
#if (mit_pval[i]>0.01){
if (mit_ob[i]<=mit_threshold){
break
}else{mit_depth_max<-c(mit_depth_max,mit_loc[i])}
}else{next}
val<-mit_loc[i]
ind<-which(seed_I[,1]>val|seed_I[,2]<val,)
IND<-intersect(IND, ind)
I<-c(I,i)
}
sort(mit_depth_max)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("../functions/binary_segmentation.R")
MIT_path<-"/Users/mzheng/Desktop/Research/Prof_Dubey/elec_result"
file_list = mixedsort(list.files(path = MIT_path ,full.names=TRUE,recursive=TRUE))
file_list = mixedsort(list.files(path = MIT_path ,full.names=TRUE,recursive=TRUE))
minLen<-10
#30 percent, c=0.3
seed_I<-seeded.intervals(264,decay = sqrt(2))
seed_I<-seed_I[(seed_I[,2]-seed_I[,1])>minLen,]
nrow(seed_I)
mit_loc<-c();mit_pval<-c();mit_ob<-c();mit_permute<-c()
#for (i in file_list[min_20]){
for (i in file_list){
d<-get(load(i))
dim(d$test)
mit_ob<-c(mit_ob,d$observed_test_statistics)
mit_permute<-rbind(mit_permute,d$permuted_test_statistics)
mit_pval<-c(mit_pval,d$p_val)
mit_loc<-c(mit_loc,d$loc)
}
mit_threshold<-quantile(mit_permute[1,],0.95)
#1. we could break the loop, as soon as there is a point doesn't satisfy the stopping rule, say pval
#2. collect all the maximal until exhaust, then delete the unstaisfied points.
mit_depth_max<-c();IND<-c(1:length(mit_ob));I<-c()
for (i in order(mit_ob,decreasing = TRUE)){
if (i %in% IND){
#if (mit_pval[i]>0.01){
if (mit_ob[i]<=mit_threshold){
break
}else{mit_depth_max<-c(mit_depth_max,mit_loc[i])}
}else{next}
val<-mit_loc[i]
ind<-which(seed_I[,1]>val|seed_I[,2]<val,)
IND<-intersect(IND, ind)
I<-c(I,i)
}
sort(mit_depth_max)
